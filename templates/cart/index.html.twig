{% extends 'base.html.twig' %}

{% block title %}Cart{% endblock %}

{% block body %}
    <section class="ftco-section">
        <div class="container py-5">
            <div class="row justify-content-center">
                <div class="col-lg-12 col-md-12"> <!-- Changed from col-md-10 to col-lg-12 col-md-12 for a wider container -->
                    <h2 class="mb-4 text-center text-success fw-bold">Shopping Cart</h2>

                    <!-- Cart Summary -->
                    <div class="card shadow-lg border-0 rounded-4 mb-4">
                        <div class="card-body p-4">
                            <table class="table table-hover align-middle">
                                <thead class="bg-light">
                                <tr>
                                    <th class="py-3">Product</th>
                                    <th class="py-3">Price</th>
                                    <th class="py-3">Quantity</th>
                                    <th class="py-3">Action</th>
                                </tr>
                                </thead>
                                <tbody id="cart-items"></tbody>
                            </table>

                            <!-- Empty Cart Message -->
                            <div id="empty-cart-message" class="text-center text-muted py-4 d-none">
                                Your cart is empty
                            </div>

                            <!-- Cart Total and Actions -->
                            <div class="d-flex justify-content-between align-items-center mt-4">
                                <h5 class="mb-0 fw-bold text-dark">Total: <span id="cart-total" class="text-success">0 TND</span></h5>
                                <div>
                                    <button onclick="checkout()" class="btn btn-success btn-lg me-3">
                                        <i class="fas fa-check-circle me-2"></i> Proceed to Checkout
                                    </button>
                                    <a href="{{ path('app_produit_index') }}" class="btn btn-secondary btn-lg">
                                        <i class="fas fa-arrow-left me-2"></i> Continue Shopping
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script>
        function loadCart() {
            fetch('/cart/view')
                .then(response => response.json())
                .then(data => {
                    let cartItems = document.getElementById('cart-items');
                    let emptyCartMessage = document.getElementById('empty-cart-message');
                    let cartTotal = document.getElementById('cart-total');
                    cartItems.innerHTML = '';
                    let total = 0;

                    if (Object.keys(data).length === 0) {
                        cartItems.classList.add('d-none');
                        emptyCartMessage.classList.remove('d-none');
                        cartTotal.textContent = '0 TND';
                    } else {
                        cartItems.classList.remove('d-none');
                        emptyCartMessage.classList.add('d-none');
                        for (let id in data) {
                            let item = data[id];
                            total += item.prix * item.quantity;
                            cartItems.innerHTML += `
                                <tr class="cart-item">
                                    <td class="py-3">
                                        <div class="d-flex align-items-center">
                                            <img src="{{ asset('/uploads/images/') }}${item.image || 'default-product.jpg'}" alt="${item.nom}" class="rounded me-3" style="width: 50px; height: 50px; object-fit: cover;">
                                            <span class="fw-bold text-dark">${item.nom}</span>
                                        </div>
                                    </td>
                                    <td class="py-3 text-dark">${item.prix} TND</td>
                                    <td class="py-3">
                                        <div class="input-group w-50 mx-auto">
                                            <button class="btn btn-outline-secondary" onclick="updateQuantity(${id}, ${item.quantity - 1})">-</button>
                                            <input type="number" class="form-control text-center" value="${item.quantity}" min="1" style="width: 60px;" onchange="updateQuantity(${id}, this.value)">
                                            <button class="btn btn-outline-secondary" onclick="updateQuantity(${id}, ${item.quantity + 1})">+</button>
                                        </div>
                                    </td>
                                    <td class="py-3">
                                        <button onclick="removeFromCart(${id})" class="btn btn-danger btn-sm">Remove</button>
                                    </td>
                                </tr>`;
                        }
                        cartTotal.textContent = `${total} TND`;
                    }
                })
                .catch(error => console.error('Error:', error));
        }

        function updateQuantity(productId, quantity) {
            if (quantity < 1) quantity = 1;
            fetch('/cart/update/' + productId, {
                method: 'POST',
                headers: { 'X-Requested-With': 'XMLHttpRequest', 'Content-Type': 'application/x-www-form-urlencoded' },
                body: 'quantity=' + quantity
            })
                .then(response => response.json())
                .then(() => {
                    updateCartCount();
                    loadCart();
                })
                .catch(error => console.error('Error:', error));
        }

        function removeFromCart(productId) {
            fetch('/cart/remove/' + productId, {
                method: 'POST',
                headers: { 'X-Requested-With': 'XMLHttpRequest' }
            })
                .then(response => response.json())
                .then(() => {
                    updateCartCount();
                    loadCart();
                })
                .catch(error => console.error('Error:', error));
        }

        function checkout() {
            fetch('/cart/checkout', { method: 'POST', headers: { 'X-Requested-With': 'XMLHttpRequest' } })
                .then(response => {
                    if (!response.ok) {
                        console.log('Response status:', response.status);
                        return response.json().then(data => {
                            throw new Error('Server error: ' + response.status + ' - ' + (data.message || 'Unknown error'));
                        });
                    }
                    return response.json();
                })
                .then(data => {
                    console.log('Parsed data:', data); // Log the data to identify issues
                    if (data.status === 'success') {
                        if (data.redirect_url) {
                            window.location.href = data.redirect_url; // Redirect to confirmation page
                        } else {
                            alert(data.message || 'Order placed successfully');
                            loadCart();
                            updateCartCount();
                        }
                    } else {
                        alert('Error: ' + data.message);
                        loadCart();
                        updateCartCount();
                    }
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    alert('An error occurred during checkout. Check the console for details.');
                });
        }

        function updateCartCount() {
            fetch('/cart/view')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('cart-count').innerText = Object.keys(data).length;
                })
                .catch(error => console.error('Error:', error));
        }

        document.addEventListener("DOMContentLoaded", () => {
            loadCart();
            updateCartCount();
        });
    </script>

    <style>
        .cart-item {
            transition: background-color 0.3s ease;
        }

        .cart-item:hover {
            background-color: #f8f9fa;
        }

        .card {
            background: #fff;
            border-radius: 15px;
            overflow: hidden;
        }

        .btn-outline-secondary {
            background: #fff;
            border-color: #6c757d;
            color: #6c757d;
            transition: all 0.3s ease;
        }

        .btn-outline-secondary:hover {
            background: #6c757d;
            color: #fff;
            border-color: #6c757d;
        }

        .input-group {
            max-width: 150px;
        }

        #empty-cart-message {
            font-size: 1.25rem;
            font-style: italic;
        }
    </style>
{% endblock %}