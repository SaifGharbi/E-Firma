# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    nasa_api_key: 'WtVu3xMPl4iGOks3POHr96tpMdItcNxqeXviEfhd'
    openweather.api_key: 'a729d36d5045c2f0825b622482b67d31'
    sentinelhub.client_id: 'a02c4386-5332-4eec-9779-5e8c38c8a354'
    sentinelhub.client_secret: 'lbYnlZ9iaVSKPGpKIPaAs3ijLCV78yHP'
    image_directory: '%kernel.project_dir%/public/uploads/images'
    stripe_secret_key: '%env(STRIPE_SECRET_KEY)%'
    twilio_account_sid: '%env(TWILIO_ACCOUNT_SID)%'
    twilio_auth_token: '%env(TWILIO_AUTH_TOKEN)%'
    twilio_phone_number: '%env(TWILIO_PHONE_NUMBER)%'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    App\Service\PaymentService:
        arguments:
            $stripeSecretKey: '%env(STRIPE_SECRET_KEY)%'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\NASAService:
        arguments:
            $apiKey: '%nasa_api_key%'

    App\Service\WeatherService:
        autowire: true
        autoconfigure: true
        public: true
        arguments:
            $httpClient: '@http_client'
            $apiKey: '%openweather.api_key%'
    
    App\Service\CropRecommendationService:
        arguments:
            $apiUrl: 'http://127.0.0.1:5000/predict_crop' # Flask API URL
    

    App\Service\SentinelHubService:
        arguments:
            $client: '@http_client'
            $clientId: '%sentinelhub.client_id%'
            $clientSecret: '%sentinelhub.client_secret%'
    
